#!/usr/bin/env bash

set \
  -x \
  -o nounset \
  -o pipefail \

# required environment variables
: ${ASDF_INSTALL_TYPE?}
: ${ASDF_INSTALL_VERSION?}
: ${ASDF_INSTALL_PATH?}

readonly __dirname="$(cd -P "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# make a temporary download directory with a cleanup hook
readonly TMP_DOWNLOAD_DIR="$(mktemp -d -t "asdf_istioctl_XXXXXX")"
# trap 'rm -rf "${TMP_DOWNLOAD_DIR?}"' EXIT

install() {
  local install_type="$1"
  local version="$2"
  local install_path="$3"

  local bin_install_path="${install_path}/bin"

  local download_url="$(get_download_url "${version}")"
  local download_path="${TMP_DOWNLOAD_DIR}/$(get_filename "${version}")"

if curl -fs -L "${download_url}" -o "${download_path}"; then
    echo "Cleaning helmfile previous binaries"
    rm -rf "${bin_install_path?}"

    echo "Creating helmfile bin directory"
    mkdir -p "${bin_install_path}"

    if [[ -f "${download_path}" ]]; then
      echo "copying helmfile to bin directory"
      chmod +x "${download_path}"
      cp "${download_path}" "${bin_install_path}"
      mv "${bin_install_path}/$(get_filename ${version})" "${bin_install_path}/helmfile"
    fi
  else 
    echo "Error: helmfile version ${version} not found" >&2
    exit 1
  fi

}

get_platform() {
  local os=$(uname -s | tr '[:upper:]' '[:lower:]')
  local arch=$(uname -m)

  local out_os
  local out_arch

  case "${os}" in
  "linux")
    out_os="linux"
    ;;
  "darwin")
    out_os="darwin"
    ;;
  "openbsd")
    out_os="openbsd"
    ;;
  *)
    echo "${os} is not supported"
    exit 1
    ;;
  esac

  case "${arch}" in
  "x86_64")
    out_arch="amd64"
    ;;
  "i386" | "i686")
    out_arch="386"
    ;;
  *)
    echo "${arch} is not supported"
    exit 1
    ;;
  esac

  echo "${out_os}_${out_arch}"
  return 0
}

get_filename() {
  local version="$1"
  local platform="$(get_platform)"

  echo "helmfile_${platform}"
}

get_download_url() {
  local version="$1"
  local filename="$(get_filename $version)"

  echo "https://github.com/roboll/helmfile/releases/download/v${version}/${filename}"
}

install $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
